# -*- coding: utf-8 -*-
"""plotly_assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11SK4aU0pGg4bAxdgnnMBln1YhMg_S1LJ

Q1. Load the "titanic" dataset using the load_dataset function of seaborn. Use Plotly express to plot a scatter plot for age and fare columns in the titanic dataset.
---
"""

import seaborn as sns
titanic = sns.load_dataset("titanic")

titanic

import plotly.express as px
fig = px.scatter( titanic, x = 'age' , y = 'fare', title = 'Scatter graph between age and fare')
fig.show()

"""Q2. Using the tips dataset in the Plotly library, plot a box plot using Plotly express."""

df = px.data.tips()
df

fig = px.box(df, x = 'time', y = 'total_bill')
fig.show()

"""Q3. Using the tips dataset in the Plotly library, Plot a histogram for x= "sex" and y="total_bill" column in
the tips dataset. Also, use the "smoker" column with the pattern_shape parameter and the "day"
column with the color parameter.
"""

fix = px.histogram(df, x="sex", y="total_bill", color ="day", pattern_shape="smoker" )
fix.show()

"""Q4. Using the iris dataset in the Plotly library, Plot a scatter matrix plot, using the "species" column for
the color parameter.
"""

df1 = px.data.iris()
df1

fig1 = px.scatter( df1, x = 'sepal_length' , y = 'sepal_width', color = 'species')
fig1.show()

fig1 = px.scatter( df1, x = 'petal_length' , y = 'petal_width', color = 'species')
fig1.show()

"""Q5. What is Distplot? Using Plotly express, plot a distplot.

A distribution plot, also known as a Distplot, displays the variation in data distribution. The total distribution of continuous data variables is shown by the Seaborn Distplot. The data is represented by a combination of the two of these â€“ rug plot, histogram, and a line in the Distplot. The create_distplot() function in the figure_factory module requires a necessary parameter called hist data.
"""

import numpy as np
import plotly.figure_factory as ff
hist_data = [np.random.randn(100)]
labels = ['distplot']
figure = ff.create_distplot(hist_data, labels)
figure.show()

